% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/thmm.init.r
\name{thmm.forget.env}
\alias{thmm.forget.env}
\title{forget internal environment}
\usage{
thmm.forget.env(hmm)
}
\arguments{
\item{hmm}{DTHmm model (from \link{thmm.init})}
}
\value{
modified DTHmm
}
\description{
In the current implementation a \code{DTHmm} object
keeps internally tracks of the \link{parent.frame} environment where
\link{thmm.init} has been called. This is necessary to ensure that the
\code{...} arguments will be interpreted in the correct context.
A drawback arise when you want to serialize (thru \link{serialize}, \link{save}
or \link{saveRDS}) this object. R will also serialize this environment and
this may gives rise to a potentially huge file (if you have large objects
in this environment).\cr
For now, a workaround is to replace this environment by \link{globalenv}.
This is safe if you do not refer to any parent frame variable in the
code of \code{density} (which is a good programming
practice). A (temporary) helper function \link{thmm.forget.env} is provided
to perform this replacement. You may call it just before serializing.\cr
This unfortunate behavior will be changed in the future. I just need a bit
of time to think about possible consequences of forgetting parent frame.
}
\examples{
\dontrun{
myhmm <- function() { HUGE=rnorm(1e6); thmm.init(dnorm, 0.1, mean=c(-1,1), sd=1) }
hmm0 <- myhmm()
saveRDS(hmm0, "hmm0.rds")  # 7 Mb
hmm1 <- thmm.forget.env(hmm0)
saveRDS(hmm1, "hmm1.rds")  # 18 Kb
hmm1 <- readRDS("hmm1.rds")
obs <- thmm.simulate(hmm1, 100, .seed=0)
vit <- thmm.viterbi(hmm1, obs$values)
plot(vit$states)
points(obs$states, pch=16, cex=0.5, col=2)
}

}

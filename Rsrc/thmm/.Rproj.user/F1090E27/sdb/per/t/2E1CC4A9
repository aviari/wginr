{
    "collab_server" : "",
    "contents" : "#\n# additional manual tests : bivariate normal distribution\n# (using complex number implementation)\n# see also : test.multivar.norm.r for a more general multivariate\n#            version\n#\n\nif (FALSE) {\n\n  require(thmm)\n\n  .c <- function(x,y=x) complex(real=x, imaginary=y)\n\n  #\n  # distribution: bivariate normal (with 0 covariance)\n  # implementation using complex numbers\n  #\n  dxynorm <- function(x, mean=.c(0), sd=.c(1), log=FALSE) {\n    re <- dnorm(Re(x), mean=Re(mean), sd=Re(sd), log=log)\n    im <- dnorm(Im(x), mean=Im(mean), sd=Im(sd), log=log)\n    if (log) re+im else re*im\n  }\n\n  #\n  # random generation function\n  #\n  rxynorm <- function(n, mean=.c(0), sd=.c(1)) {\n    re <- rnorm(n, mean=Re(mean), sd=Re(sd))\n    im <- rnorm(n, mean=Im(mean), sd=Im(sd))\n    .c(re, im)\n  }\n\n  hmm <- thmm.init(dxynorm, 0.1,\n                   mean=c(.c(10, 20), .c(50, 100)),\n                   sd=c(.c(5,10),.c(25, 40)))\n\n  x <- thmm.simulate(hmm, 100, with.values=T)\n\n  v <- thmm.viterbi(hmm, x$values, .useC=T)\n\n  lvl <- thmm.parameters(hmm, \"mean\")\n\n  par(mfrow=c(2,1))\n  plot(Re(x$values))\n  lines(Re(lvl[x$states]), col=3, lwd=2)\n  lines(Re(lvl[v$states]), col=2, lty=2, lwd=2)\n  plot(Im(x$values))\n  lines(Im(lvl[x$states]), col=3, lwd=2)\n  lines(Im(lvl[v$states]), col=2, lty=2, lwd=2)\n  par(mfrow=c(1,1))\n\n}\n\n",
    "created" : 1498899296256.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1155429216",
    "id" : "2E1CC4A9",
    "lastKnownWriteTime" : 1498840946,
    "last_content_update" : 0,
    "path" : "~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/thmm/R/tests/test.bivariate.norm.complex.r",
    "project_path" : "R/tests/test.bivariate.norm.complex.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
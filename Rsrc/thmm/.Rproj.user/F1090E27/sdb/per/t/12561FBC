{
    "collab_server" : "",
    "contents" : "#\n#\n#\n\nrequire(thmm)\n\n#\n# <internal> helper : make complex number\n#\n\n.c <- function(x,y=x) complex(real=x, imaginary=y)\n\n#\n# <internal> compute max in rows\n# same as apply(x,1,max) but much quicker\n#\n.row.max <- function(x) {\n  mc <- max.col(x)\n  x[cbind(seq_along(mc), mc)]\n}\n\n#\n# <internal> binormal distribution\n#\n.dbinorm <- function(x, mean=0, sd=1, log=FALSE) {\n  unlist(mapply(function(m, s) {\n    pp <- dnorm(x,  m, s, log=log)\n    pm <- dnorm(x, -m, s, log=log)\n    if (log) {\n      # compute log(exp(pp)+exp(pm)) without overflow\n      mp <- cbind(pp, pm)\n      mc <- max.col(mp)                   # max in rows, quicker than\n      mc <- mp[cbind(seq_along(mc), mc)]  # apply(mp, 1, max)\n      mc + log(rowSums(exp(mp-mc)))\n    } else {\n      pp + pm\n    }\n  }, mean, sd, SIMPLIFY=F), use.names=F)\n}\n\n#\n# <internal> binormal random generator\n#\n.rbinorm <- function(n, mean=1, sd=1) {\n  .cycle <- function(x, k) head(rep(x, k), k)\n  m <- max(n, length(mean), length(sd))\n  mean <- .cycle(mean, m) * sample(c(-1,1), m, replace=T)\n  rnorm(n, mean=mean, sd=sd)\n}\n\n#\n# distribution: bivariate normal + binormal (0 covariance)\n#               implemented with complex numbers\n#\ndrcaf <- function(x, mean=.c(0), sd=.c(1), log=FALSE) {\n  rc <- dnorm(Re(x), mean=Re(mean), sd=Re(sd), log=log)\n  af <- .dbinorm(Im(x), mean=Im(mean), sd=Im(sd), log=log)\n  if (log) rc+af else rc*af\n}\n\n#\n# random generation function\n#\nrrcaf <- function(n, mean=.c(0), sd=.c(1)) {\n  rc <- rnorm(n, mean=Re(mean), sd=Re(sd))\n  af <- .rbinorm(n, mean=Im(mean), sd=Im(sd))\n  .c(rc, af)\n}\n\nhmm <- thmm.init(drcaf, 0.1,\n                 mean=c(.c(10, 20), .c(50, 100)),\n                 sd=c(.c(5,10),.c(25, 40))/5)\n\nx <- thmm.simulate(hmm, 100, with.values=T)\n\nv <- thmm.viterbi(hmm, x$values, .useC=T)\n\nlvl <- thmm.parameters(hmm, \"mean\")\n\nif (FALSE) {\n\n  par(mfrow=c(2,1))\n  plot(Re(x$values))\n  lines(Re(lvl[x$states]), col=3, lwd=2)\n  lines(Re(lvl[v$states]), col=2, lty=2, lwd=2)\n  plot(Im(x$values))\n  lines(Im(lvl[x$states]), col=3, lwd=2)\n  lines(Im(lvl[v$states]), col=2, lty=2, lwd=2)\n  par(mfrow=c(1,1))\n\n}\n\n",
    "created" : 1498899305882.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "431026148",
    "id" : "12561FBC",
    "lastKnownWriteTime" : 1498942198,
    "last_content_update" : 0,
    "path" : "~/Desktop/VadeMecumR/bivar.binormal.r",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
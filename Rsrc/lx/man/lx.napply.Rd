% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lx.apply.r
\name{lx.napply}
\alias{lx.napply}
\title{mapply with names}
\usage{
lx.napply(X, FUN, ..., use.threads = FALSE)
}
\arguments{
\item{X}{an array}

\item{FUN}{the function to be applied. see \link{mapply}.}

\item{...}{arguments to vectorize over. see \link{mapply}.}

\item{use.threads}{use multithreading}
}
\description{
\code{lx.napply(X, FUN, ...} is functionally equivalent
to: \cr
\code{lx.mapply(FUN, names(X), X, ...)}\cr
and ensures that names(X) is not NULL\cr
FUN should therefore take at least two arguments FUN(name, x, ...)\cr
}
\note{
as an exception in the \code{lx.?apply} family, the default behavior is no thread

default values for \code{SIMPLIFY} and \code{USE.NAMES} is \code{TRUE}
as in \link{lx.mapply}, this usually slow down process considerably,
you should consider using \code{FALSE} instead to speed up computations.
}
\examples{
ll <- list(a=1, b=2, c=3)
lx.napply(ll, function(nam, val) paste(nam, val, sep="."))

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lx.apply.r
\name{lx.happly}
\alias{lx.happly}
\title{lx.lapply with duplicated file handle}
\usage{
lx.happly(X, FUN, handle, ..., pg.verbose = lx.options("pg.verbose"),
  use.threads = lx.use.threads(), mc.cores = lx.options("mc.cores"))
}
\arguments{
\item{X}{an array, including a matrix. see \link{lapply}.}

\item{FUN}{the function to be applied. see \link{lapply}.}

\item{handle}{a file handle (see \link{HELP.FILE.HANDLE})\cr}

\item{...}{anything passed to FUN. see \link{lapply}.}

\item{pg.verbose}{use progress bar}

\item{use.threads}{use multithreading}

\item{mc.cores}{The number of cores to use. see \link{mclapply}.}
}
\description{
a version of \link{lx.lapply} that duplicates the file handle
\code{handle} in each thread.
this is useful when \code{FUN} needs read access to file since
the file descriptor will be different in each thread.\cr
warning: don't use for write access since the write position
is unpredictable.
}
\note{
user's function \code{FUN} has the form \code{FUN(x, handle, ...)}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lx.language.r
\name{lx.mixin}
\alias{lx.mixin}
\title{mixin named lists}
\usage{
lx.mixin(lout, lin, keys = intersect(names(lout), names(lin)))
}
\arguments{
\item{lout}{named list}

\item{lin}{named list}

\item{keys}{character array of keys to replace.
default is \code{intersect(names(lout), names(lin))}}
}
\value{
named list
}
\description{
replace key values in lout by key values in lin.
}
\details{
this is equivalent to
\preformatted{lout[keys] <- lin[keys]}
and is typically used to override formal arguments
by user's arguments to allow specifying only part
of a list argument (see example below).
}
\examples{
# replace
lx.mixin(list(a=1, c=3), list(a=10, b=20))

# replace and add
lx.mixin(list(a=1, c=3), lin<-list(a=10, b=20), names(lin))

# select
lx.mixin(NULL, lin<-list(a=10, b=20), intersect(names(lin), c("a", "c")))

# typical usage with function args
foo <- function(arg=list(a=1, b="foo")) {
   dft <- formals()
   arg  <- lx.mixin(dft$arg, arg)
   arg
}
foo(list(a=2)) # => list(a = 2, b = "foo")

}

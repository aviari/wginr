% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lx.fileio.r
\docType{data}
\name{HELP.FILE.HANDLER}
\alias{HELP.FILE.HANDLER}
\title{lx binary file handler}
\description{
a file \code{handler} (called handler for short) 
is an R object (see notes) wrapping binary file IO operations
(do not confuse with a \link{HELP.FILE.HANDLE}).\cr

a \code{handler} should implement all the following operations:
\itemize{
 \item accept   : tell if file can be handled by this handler
 \item open     : open file
 \item close    : close file
 \item seek     : tell/seek into file
 \item read     : read n bytes from file
}
API for these functions:\cr
\preformatted{
  accept(filename, mode)
    filename: character string, name of file (see base::open)
    mode: character string, open mode (see base::open)
  returns logical TRUE if the file can be handled by this handler
    
  open(filename, mode)
    filename: character string, name of file (see base::open)
    mode: character string, open mode (see base::open)
  returns physical connection
  
  close(con)
    con: physical connection
  returns (ignored)
  
  seek(con, ...)
    con: physical connection
    ...: optional position (see lx::lx.seek)
  returns current position in file as a (numeric) byte offset from the origin
  
  read(con, n=1L)
    con: physical connection
    n: integer The (maximal) number of bytes to be read
  returns a raw vector of at most n bytes (less if EOF reached)
}
}
\note{
handlers have to be registered thru \link{lx.register.file.handler}.\cr
\code{lx} maintain a stack of handlers that are used from top to bottom
when opening a file (thru \link{lx.open}). the first handler accepting
the filename argument (thru \code{accept}) is selected.\cr
by default, a R binary file (accepting anything) is registered at the lowest
stack position with name "default".

in practice a FILE.HANDLER is currently implemented as an R environment
}

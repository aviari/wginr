#

require(asdog)

basta.file = "/Users/viari/Desktop/LyonCancer/data/HS_GRCh37_72"
baf.file = "/TmpStorage/HER2.S09296.BL13025.WGS"
map.file = paste0(basta.file, ".mappable.bed")

REGSIZE = 1000
SAMPSIZE = 1e6
BINSIZE = 1000

.rsize <- function(x) x[,3] - x[,2] + 1
.tsize <- function(x) sum(.rsize(x))

lx.options(use.threads=T)

####

# -------------------------------------------------
# gam GC model
# (simplified version of asdog GC model)
#
gam.model <- function(gc, cov, N=100,
                      base.quant=0.01,
                      trim.quant=c(0.02, 0.95)) {
  
  mod <- list(gc=gc, cov=cov, mcov=median(cov), N=N)
  
  # aggregate
  mod$mean <- aggregate(cov, list(gc=round(gc*N)), FUN=median)
  colnames(mod$mean) <- c("gc", "cov")
  
  # baseline adjustment
  #
  M = ceiling(length(mod$mean$cov)/10)
  baseline <- if (is.na(base.quant)) 1 else quantile(cov, base.quant, na.rm=T)
  cov <- c(rep(baseline,M), rep(baseline,M), mod$mean$cov)
  gc  <- c(rep(0, M), rep(N, M), mod$mean$gc)
  
  # make gam model
  #
  mod$gam <- gam(cov ~ s(gc))
  
  # prediction vector 
  #
  mod$pvec <- predict(mod$gam, list(gc=seq.int(0, N)))
  mod$pvec[mod$pvec <= baseline] <- baseline
  
  # trim low and high gc
  #
  if (! is.null(trim.quant)) {
    trim <- quantile(mod$gc, trim.quant, na.rm=T)
    bnds <- round(trim*N)
    mod$pvec[1:bnds[1]] <- mod$pvec[bnds[1]]
    mod$pvec[bnds[2]:length(mod$pvec)] <- mod$pvec[bnds[2]]
  }
  
  # remove outliers (may occur if span is too small)
  #
  #   outl <- 5*median(mod$pvec, na.rm=T)
  #   mod$pvec[mod$pvec >= outl] <- outl
  
  mod
}

# -------------------------------------------------
# gam GC model predictor
#
gam.predict <- function(mod, gc) as.vector(mod$pvec[round(gc*mod$N)+1])

# -------------------------------------------------
# local plot : plot GC gam model
#
plot.gcmodel <- function(mod, xlim=c(0,1), ylim=c(0,2), ...) {
  
  lx.plot(mod$gc, mod$cov/mod$mcov,
          xlim=xlim,
          ylim=ylim,
          xlab="%GC", ylab="rel. cov.",
          ...)
  
  points(mod$mean$gc/mod$N, mod$mean$cov/mod$mcov, pch=19, cex=0.8, col=4)
  points(mod$mean$gc/mod$N, mod$mean$cov/mod$mcov, pch=1, cex=0.8, col=7)
  lines(seq.int(0, 1, 1/mod$N), mod$pvec/mod$mcov, col=2, lwd=3)
  abline(h=1, col=3)
  abline(v=mean(mod$gc), col=3)
  
  invisible()
}

####


# open basta & baf
name <- asdog.check.file(basta.file, "bst")
basta <- basta.open(name)
name <- asdog.check.file(baf.file, "baf")
baf <- baf.open(name)

# make regions
regions <- basta2clocs(basta)
regions <- regions.bybed(basta, map.file, init=regions, minreg=REGSIZE)
regions <- regions.byacgt(basta, init=regions, minreg=REGSIZE)
regions <- regions.trim(regions, trim=REGSIZE, minreg=REGSIZE)

lx.out("yielding ", nrow(regions), 
       " regions covering ", .tsize(regions), " bp")

# sample coordinates
samp.coords <- asdog.sample(basta, regions, size=SAMPSIZE, minreg=REGSIZE)
samp.clocs <- coords2clocs(basta, samp.coords)
  
# get GC at sample points

xgc <- lx.lapply(samp.coords, function(x) c(x - BINSIZE/2, x + BINSIZE/2))
gc <- unlist(lx.happly(xgc, function(x, h) basta.count.coord(h, x, sym="GC"),
                handle=basta))/BINSIZE

# plot global GC
hgc <- hist(gc, br=50, freq=F, xlim=c(0,1), main="global GC")
medgc <- median(gc)/BINSIZE
abline(v=medgc, col=2, lwd=2)
text(medgc, max(hgc$density)*0.9, labels=sprintf("%.2f", medgc),
     pos=4, col=2)

# plot GC per chromosomes
sgc <- split(gc, samp.clocs[,1])
opar <- par(no.readonly=T)
par(mfrow=lx.mfrow(length(sgc)), mar=c(1,1,1,1), mgp=c(2,0,0.2))
tmp <- lapply(names(sgc), function(chr) {
  h <- hist(sgc[[chr]], br=20, freq=F, xlim=c(0,1), main=chr, xlab=NULL, ylab=NULL, cex.axis=0.5)
  abline(v=medgc, col=2, lwd=2)
  m <- median(sgc[[chr]])
  abline(v=m, col=3, lwd=1)
  text(m, max(h$density)*0.9, labels=sprintf("%.2f", m), pos=4, col=3)
})
par(opar)

# boxplot

sgc <- lapply(sgc, function(x) x/BINSIZE)
boxplot(sgc, las=2, ylab="%GC", pars=list(outpch=20, outcex=0.1))
abline(h=medgc, col=2, lwd=2)

# profiles

lx.plot(samp.coords, gc, type='p', col=lx.LGREY, xlab="pos", ylab="%GC", .samp=1e5)
bnd <- samp.coords[head(cumsum(c(1, rle(samp.clocs[,1])$lengths)), -1)]
abline(v=bnd, col=4)
text(x=bnd, y=max(gc)*0.8, labels=1:22, col=4, cex=0.5, pos=4, offset=0.1)
abline(h=medgc, col=2, lwd=2)

# chr 1
sel <- samp.clocs[,1] == 1
sel.gc <- gc[sel]
sel.pos <- samp.clocs[sel,2]
lx.plot(sel.pos, sel.gc, type='p', col=1, xlab="pos", ylab="%GC", main="chr 1", .samp=1e5)
abline(h=medgc, col=2, lwd=2)
abline(h=median(sel.gc), col=3, lwd=2)

# chr 19
sel <- samp.clocs[,1] == 19
sel.gc <- gc[sel]
sel.pos <- samp.clocs[sel,2]
lx.plot(sel.pos, sel.gc, type='p', col=1, xlab="pos", ylab="%GC", main="chr 19", .samp=1e5)
abline(h=medgc, col=2, lwd=2)
abline(h=median(sel.gc), col=3, lwd=2)

# get Cover at sample points

xcov <- samp.coords
cov <- lx.happly(xcov, function(x, h) baf.fetch.coord(h, x),
                       handle=baf)
cov <- do.call(rbind, cov)
cov <- rowSums(cov)

# plot global cov
medcov <- median(cov)
selcov <- cov < 80
cov <- cov[selcov]
xcov <- xcov[selcov]
hcov <- hist(cov, br=50, freq=F, main="global coverage")
abline(v=medcov, col=2, lwd=2)
text(medcov, max(hcov$density)*0.9, labels=sprintf("%.2f", medcov),
     pos=4, col=2)

# plot cov per chromosomes
scov <- split(cov, samp.clocs[selcov,1])
opar <- par(no.readonly=T)
par(mfrow=lx.mfrow(length(scov)), mar=c(1,1,1,1), mgp=c(2,0,0.2))
tmp <- lapply(names(scov), function(chr) {
  h <- hist(scov[[chr]], br=20, freq=F, xlim=c(0,80), main=chr, xlab=NULL, ylab=NULL, cex.axis=0.5)
  abline(v=medcov, col=2, lwd=2)
  m <- median(scov[[chr]])
  abline(v=m, col=3, lwd=1)
  text(m, max(h$density)*0.9, labels=sprintf("%.2f", m), pos=4, col=3)
})
par(opar)

# boxplot

boxplot(scov, las=2, ylab="Cov", pars=list(outpch=20, outcex=0.1))
abline(h=medcov, col=2, lwd=2)

# profiles

lx.plot(xcov, cov, type='p', col=lx.LGREY, xlab="pos", ylab="Cov", .samp=1e5)
bnd <- samp.coords[head(cumsum(c(1, rle(samp.clocs[,1])$lengths)), -1)]
abline(v=bnd, col=4)
text(x=bnd, y=max(cov)*0.9, labels=1:22, col=4, cex=0.5, pos=4, offset=0.1)
abline(h=medcov, col=2, lwd=2)

sel <- samp.clocs[selcov,1] == 1
sel.cov <- cov[sel]
sel.pos <- xcov[sel]
lx.plot(sel.pos, sel.cov, type='p', col=1, xlab="pos", ylab="Cov", main="chr 1", .samp=1e5)
abline(h=medcov, col=2, lwd=2)
abline(h=median(sel.cov), col=3, lwd=2)

sel <- samp.clocs[selcov,1] == 19
sel.cov <- cov[sel]
sel.pos <- xcov[sel]
lx.plot(sel.pos, sel.cov, type='p', col=1, xlab="pos", ylab="Cov", main="chr 19", .samp=1e5)
abline(h=medcov, col=2, lwd=2)
abline(h=median(sel.cov), col=3, lwd=2)

# MODEL GC

mgc <- gc[selcov]
mcov <- cov

mod <- gam.model(mgc, mcov, N=100,
                      base.quant=NA,
                      trim.quant=NULL)
plot.gcmodel(mod)
title(paste0("GC Model W=", BINSIZE))

sel <- samp.clocs[selcov,1] == 1
smgc <- mgc[sel]
smcov <- mcov[sel]
pred <- gam.predict(mod, smgc)
opar <- par(no.readonly=T)
par(mfrow=c(2,1), mar=c(1,1,1,1), mgp=c(2,0,0.2))
lx.plot(smcov/medcov, ylim=c(0,3))
abline(h=1, col=2, lwd=2)
lx.plot(smcov/pred, ylim=c(0,3))
abline(h=1, col=2, lwd=2)
title("chr1")
par(opar)

sel <- samp.clocs[selcov,1] == 19
smgc <- mgc[sel]
smcov <- mcov[sel]
pred <- gam.predict(mod, smgc)
opar <- par(no.readonly=T)
par(mfrow=c(2,1), mar=c(1,1,1,1), mgp=c(2,0,0.2))
lx.plot(smcov/medcov, ylim=c(0,3))
abline(h=1, col=2, lwd=2)
lx.plot(smcov/pred, ylim=c(0,3))
abline(h=1, col=2, lwd=2)
title("chr19")
par(opar)

mod19 <- gam.model(smgc, smcov, N=100,
                 base.quant=NA,
                 trim.quant=NULL)
plot.gcmodel(mod19)
title(paste0("GC Model chr19 W=", BINSIZE))

pred <- gam.predict(mod19, smgc)
opar <- par(no.readonly=T)
par(mfrow=c(2,1), mar=c(1,1,1,1), mgp=c(2,0,0.2))
lx.plot(smcov/medcov, ylim=c(0,3))
abline(h=1, col=2, lwd=2)
lx.plot(smcov/pred, ylim=c(0,3))
abline(h=1, col=2, lwd=2)
title("chr19")
par(opar)

sel <- samp.clocs[selcov,1] == 1
smgc <- mgc[sel]
smcov <- mcov[sel]
pred <- gam.predict(mod19, smgc)
opar <- par(no.readonly=T)
par(mfrow=c(2,1), mar=c(1,1,1,1), mgp=c(2,0,0.2))
lx.plot(smcov/medcov, ylim=c(0,3))
abline(h=1, col=2, lwd=2)
lx.plot(smcov/pred, ylim=c(0,3))
abline(h=1, col=2, lwd=2)
title("chr1")
par(opar)

#
# modele asdog
#

args <- asdog.main.args("gcmodel:")
args$base <- baf.file
args$ref <- basta.file
params <- asdog.main.params(args)

gcmodel <- asdog.gcmodel(params)

plot(gcmodel)
plot(gcmodel, what="optim")

gccorrect <- asdog.gccorrect(gcmodel, params)

opar <- par(no.readonly=T)
par(mfrow=c(2,1), mar=c(1,1,1,1), mgp=c(2,0,0.2))
plot(gccorrect, chr=1, what="raw", ylim=c(0,2))
plot(gccorrect, chr=1, what="cor", ylim=c(0,2))
par(opar)

opar <- par(no.readonly=T)
par(mfrow=c(2,1), mar=c(1,1,1,1), mgp=c(2,0,0.2))
plot(gccorrect, chr=19, what="raw", ylim=c(0,2))
plot(gccorrect, chr=19, what="cor", ylim=c(0,2))
par(opar)

params$gcmodel.base.quant = NA
params$gcmodel.base.trim = NULL
params$gcmodel.regions.band = "1 * poisson"
params$gcmodel.small.winrange = c(500, 2000, 500)
params$gcmodel.large.winrange = c(1000000, 2000000, 1000000)

params$gcmodel.small.winrange = c(500, 2000, 500)
params$gcmodel.large.winrange = c(100000, 5000000, 100000)

gcmodel <- asdog.gcmodel(params)

plot(gcmodel)

gccorrect <- asdog.gccorrect(gcmodel, params)

#
#
#

# MODEL GC iteratif

mod <- gam.model(mgc, mcov, N=100,
                 base.quant=NA,
                 trim.quant=NULL)
plot.gcmodel(mod)

pmcov <- gam.predict(mod, mgc)

lx.plot(pmcov, mcov)

# get GC at sample points

BIN2 = BINSIZE / 10
pxgc <- lx.lapply(psamp.coords, function(x) c(x - BIN2/2, x + BIN2/2))
pgc <- unlist(lx.happly(pxgc, function(x, h) basta.count.coord(h, x, sym="GC"),
                       handle=basta))/BIN2

pmgc <- pgc[selcov]

ppmcov <- gam.predict(mod, pmgc)

mod2 <- gam.model(pmgc, pmcov/ppmcov, N=100,
                  base.quant=NA,
                  trim.quant=NULL)

plot.gcmodel(mod2)


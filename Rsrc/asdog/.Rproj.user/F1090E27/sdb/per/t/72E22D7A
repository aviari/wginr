{
    "collab_server" : "",
    "contents" : "#!/usr/bin/env Rscript\n# $Id: $\n#\n# segmentation \n#\n\nsuppressMessages(library(asdog))\n\nprog.usage <- function() {\n  .cat <- function(...) cat(..., '\\n', file=stderr())\n  .cat(\"usage: asdog.segment.r --gccorrect=<gccorrect> [--plmodel=<plmodel>] [--outdir=<dir>] [--<option>=<value>]\")\n  .cat(\"       <gccorrect> := path to gccorrect (.rds) file\")\n  .cat(\"       <plmodel>   := path to ploidy model (.rds) file\")\n  .cat(\"       <dir>       := output directory (dft=.)\")\n}\n\n#\n# get arguments\n#\n\nargs <- asdog.main.args(\"segment:\")\n\n#args$gccorrect = \"../asdog.data/HER2.P00661.TU1103C.WGS.gccorrect.rds\"\n#args$plmodel = \"../asdog.data/HER2.P00661.TU1103C.WGS.plmodel.rds\"\n\nif (! is.character(args$gccorrect)) {\n    asdog.main.exit(1, usage=TRUE)\n}\n\n#\n# load GCCorrect\n#\n\ncorfile <- asdog.check.file(args$gccorrect, \"rds\", .bgz=NULL)\n\nargs$gccorrect <- NULL\n\nlx.out(\"---------------------------------------\", with.mem=T)\nlx.out(\" loading GCCorrect: \", corfile)\nlx.out(\"---------------------------------------\")\n\ngccorrect <- readRDS(file=corfile)\n\n#\n# load PLModel\n#\n\nif (is.null(args$plmodel)) {\n  lx.out(\"---------------------------------------\", with.mem=T)\n  lx.out(\" No PLModel used => no RCAF segmentation (RRC only)\")\n  lx.out(\"---------------------------------------\")\n  plmodel <- NULL\n} else {\n  modfile <- asdog.check.file(args$plmodel, \"rds\", .bgz=NULL)\n  \n  args$plmodel <- NULL\n  \n  lx.out(\"---------------------------------------\", with.mem=T)\n  lx.out(\" loading PLModel: \", modfile)\n  lx.out(\"---------------------------------------\")\n  \n  plmodel <- readRDS(file=modfile)\n}\n\n#\n# get parameters\n#\n\nparams <- asdog.main.params(args, gccorrect$params)\n\n# next line is for development (when adding new parameters in asdog.params.r)\n# you may comment it in production phase\nparams <- lx.mixin(asdog.new.params(), params)\n\n#\n# create output directory if needed\n#\n\ndir.create(params$outdir, showWarnings=FALSE)\n\n#\n# run segmentation\n#\n\nsegment <- asdog.segment(gccorrect, plmodel=plmodel, params=params)\n\n#\n# outputs names\n#\n\nout.short <- asdog.clean.path.suffix(corfile, c(\"rds\", \"gccorrect\"))\nout.full  <- paste0(params$outdir, \"/\", basename(out.short), \".segment\")\nout.base  <- basename(out.full)\n\n#\n# save segmentation\n#\n\nfname <- paste0(out.full, '.rds')\n\nlx.out(\"---------------------------------------\", with.mem=T)\nlx.out(\" saving segments to: \", fname)\nlx.out(\"---------------------------------------\")\n\nsaveRDS(segment, file=fname)\n\n#\n# making table exports\n#\n\nfname <- out.full\n\nif (! is.null(segment$rcaf.segs)) {\n  ffname <- paste0(fname, \".rcaf.txt.gz\")\n  lx.out(\"---------------------------------------\", with.mem=T)\n  lx.out(\" making table export : \", ffname)\n  lx.out(\"---------------------------------------\")\n  asdog.write.table(segment, file=gzfile(ffname), what=\"rcaf\")\n}\n\nif (! is.null(segment$rrc.segs)) {\n  ffname <- paste0(fname, \".rrc.txt.gz\")\n  lx.out(\"---------------------------------------\", with.mem=T)\n  lx.out(\" making table export : \", ffname)\n  lx.out(\"---------------------------------------\")\n  asdog.write.table(segment, file=gzfile(ffname), what=\"rrc\")\n}\n\n#\n# print pdf report\n#\n\nsetwd(params$outdir)\nfname <- out.base\n\nlx.out(\"---------------------------------------\", with.mem=T)\nlx.out(\" making pdf report: \", paste0(fname, \".pdf\"))\nlx.out(\"---------------------------------------\")\n\nasdog.pdf.report(segment, fname)\n\n#\n# end\n#\nlx.out(\"---------------------------------------\", with.mem=T)\nlx.out(\" End asdog.segment\")\nlx.out(\"---------------------------------------\")\n\nasdog.main.exit(0)\n",
    "created" : 1503492112301.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1460008643",
    "id" : "72E22D7A",
    "lastKnownWriteTime" : 1509658925,
    "last_content_update" : 1509658925,
    "path" : "~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/scripts/asdog.segment.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
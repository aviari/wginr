{
    "collab_server" : "",
    "contents" : "# -------------------------------------------------\n# $Id: $\n# Asdog: Copy Number Analysis for WGS data\n#\n# Segmentation latex reporting\n#\n\n# -------------------------------------------------\n# histogram of segments number and density\n#\n.histo.segnum <- function(segment, what=c(\"rcaf\", \"rrc\")) {\n  \n  .mean <- function(x, w) {\n    ok <- ! (is.na(x) | is.infinite(x))\n    lx.wt.mean(x[ok], w[ok], na.rm=T)\n  }\n  \n  what <- match.arg(what)\n  segs <- segment[[paste0(what, \".segs\")]]\n  segs.chr <- split(segs, segs$chr)\n  \n  opar <- par(no.readonly=T)\n  par(mfrow=c(3,1), xpd=NA)\n  tab <- table(segs$chr)\n  colr <- asdog.chromos.colors(names(tab))\n  lx.barplot(tab, cex.text=0.7, col=colr, cex.names=0.7,\n             main=paste0(\"number of \",  what, \" segments\"))\n  dens <- tab / sapply(segment$header$seq, function(x) x$size)[names(tab)]\n  dens <- round(dens * 1e8) / 100\n  lx.barplot(dens, cex.text=0.7, col=colr, cex.names=0.7,\n             srt.text=90, pos.text=3, off.text=0.8, col.text=1,\n             main=paste0(\"number of \",  what, \" segments per Mb\"))\n  zsco <- sapply(segs.chr, function(seg) .mean(seg$zscor.rrc, seg$to-seg$from+1))\n  pval <- sapply(segs.chr, function(seg) .mean(seg$pval.rrc, seg$to-seg$from+1))\n  colr <- asdog.gradient.colors(abs(zsco), xrange=c(0, 10), nlevels=11, alpha=0.5, rev=T)\n  lx.barplot(round(pval*100)/100, col=colr, cex.names=0.7, cex.text=0.7, srt.text=90,\n             pos.text=3, off.text=0.8, col.text=1,\n             main=paste0(\"mean \", what, \" segments quality\"))\n  par(opar)\n  invisible()\n}\n\n# -------------------------------------------------\n# pies of Gain-Loss\n#\n.pies.gainloss <- function(segment, what=c(\"rcaf\", \"rrc\")) {\n  \n  what <- match.arg(what)\n  segs <- segment[[paste0(what, \".segs\")]]\n  colr <- lx.COLORS[c(3, 1, 4)] # order: L N G\n  names(colr) <- c(\"L\", \"N\", \"G\")\n  \n  segs$size <- segs$to - segs$from + 1\n  segs$stat <- factor(names(colr)[sign(segs$delta.cn)+2], levels=names(colr))\n  segs.chr <- split(segs, segs$chr)\n  cnt <- lapply(segs.chr, function(x)\n              aggregate(x$size, list(stat=x$stat), sum, drop=F))\n  \n  opar <- par(no.readonly=TRUE)\n  par(mfrow=lx.mfrow(length(cnt)+1),\n      mai = c(0, 0, 0, 0))\n  \n  lapply(names(cnt), function(chr) {\n    pie(cnt[[chr]]$x, col=colr[cnt[[chr]]$stat], labels=\"\")\n    text(0, 0, chr, cex=2, font.main=1, family=\"mono\", col=\"white\")\n  })\n  \n  pie(1, col=0, labels=\"\", radius=0)\n  legend('center', legend=c('Gain', 'Normal', 'Loss'),\n         fill=colr[c(3,2,1)])\n\n  par(opar)\n  invisible()\n}\n\n# -------------------------------------------------\n# lines of Gain-Loss\n#\n.lines.gainloss <- function(segment, what=c(\"rcaf\", \"rrc\")) {\n  \n  what <- match.arg(what)\n  segs <- segment[[paste0(what, \".segs\")]]\n  \n  segs.chr <- split(segs, segs$chr)\n  colr <- lx.COLORS[c(3, 1, 4)] # order: L N G\n  nchr <- length(segs.chr)\n  xmax <- max(segs$to)\n  ymax <- 10 * nchr + 1\n  plot(c(-xmax/10,xmax), c(-1, ymax), cex=0, xlab=\"\", ylab=\"\",\n       xaxt='n', yaxt='n', frame.plot=F)\n  off <- ymax - 10\n  lapply(segs.chr, function(seg) {\n    y <- sign(seg$delta.cn)\n    col <- colr[y+2]\n    wid <- ifelse(y == 0, 2, 5)\n    segments(seg$from, off+y, seg$to, off+y, col=col, lwd=wid, lend=1)\n    off <<- off - 10\n  })\n  \n  text(rep(-xmax/10, nchr), seq(ymax-10, 1, by=-10), names(segs.chr), pos=4, offset=1,\n       cex=0.7, font.main=1, family=\"mono\")\n  \n  legend('bottomright', legend=c('Gain', 'Normal', 'Loss'),\n         fill=colr[c(3,2,1)], cex=0.7)\n  \n  title(paste0(what, \" gain-loss\"))\n  \n  invisible()\n}\n\n# =================================================\n# API\n# =================================================\n\n# -------------------------------------------------\n#' produce segmentation tex report \n#\nasdog.tex.report.segment <- function(tex, segment) {\n  \n  params <- segment$params\n  \n  # -----------------------------------------------\n  # @fixme: there is problem with pdf driver and par()\n  #         the main and labels family is not inherited\n  #         so we do have to set it each time\n  # -----------------------------------------------\n  \n  # -----------------------------------------------\n  # parameters section\n  #\n  \n  p <- asdog.filter.params(params, in.filter=\"segment:\")\n  p <- as.matrix(p, ncol=2)\n  p <- as.data.frame(apply(p, 1, paste))\n  names(p) <- 'value'\n  tex.section(tex, \"Parameters\")\n  tex.print(tex, p, size='small')\n  \n  # -------------------------------\n  # segments summary table\n  #\n  \n  if (! is.null(segment$rcaf.segs)) {\n    tex.tag(tex, \"newpage\")\n    tex.section(tex, \"RCAF segments summary\")\n    \n    # fig on\n    #\n    tex <- tex.fig.on(tex, width=7, height=7, family=\"Times\")\n    \n    .histo.segnum(segment, \"rcaf\")\n    \n    tex <- tex.fig.off(tex)\n    #\n    # fig off\n  }\n  \n  if (! is.null(segment$rrc.segs)) {\n    tex.tag(tex, \"newpage\")\n    tex.section(tex, \"RRC segments summary\")\n    \n    # fig on\n    #\n    tex <- tex.fig.on(tex, width=7, height=7, family=\"Times\")\n    \n    .histo.segnum(segment, \"rrc\")\n    \n    tex <- tex.fig.off(tex)\n    #\n    # fig off\n  }\n  \n  # -------------------------------\n  # Gain-Loss pies summary\n  #\n  \n  if (! is.null(segment$rcaf.segs)) {\n    tex.tag(tex, \"newpage\")\n    tex.section(tex, \"RCAF Gain-Loss summary\")\n    \n    # fig on\n    #\n    tex <- tex.fig.on(tex, width=7, height=7, family=\"Times\")\n    \n    .pies.gainloss(segment, \"rcaf\")\n    \n    tex <- tex.fig.off(tex)\n    #\n    # fig off\n  }\n  \n  if (! is.null(segment$rrc.segs)) {\n    tex.tag(tex, \"newpage\")\n    tex.section(tex, \"RRC Gain-Loss summary\")\n    \n    # fig on\n    #\n    tex <- tex.fig.on(tex, width=7, height=7, family=\"Times\")\n    \n    .pies.gainloss(segment, \"rrc\")\n    \n    tex <- tex.fig.off(tex)\n    #\n    # fig off\n  }\n\n  # -------------------------------\n  # Gain-Loss lines summary\n  #\n  \n  if (! is.null(segment$rcaf.segs)) {\n    tex.tag(tex, \"newpage\")\n    tex.section(tex, \"RCAF Gain-Loss lines\")\n    \n    # fig on\n    #\n    tex <- tex.fig.on(tex, width=7, height=7, family=\"Times\")\n    \n    .lines.gainloss(segment, \"rcaf\")\n    \n    tex <- tex.fig.off(tex)\n    #\n    # fig off\n  }\n  \n  if (! is.null(segment$rrc.segs)) {\n    tex.tag(tex, \"newpage\")\n    tex.section(tex, \"RRC Gain-Loss lines\")\n    \n    # fig on\n    #\n    tex <- tex.fig.on(tex, width=7, height=7, family=\"Times\")\n    \n    .lines.gainloss(segment, \"rrc\")\n    \n    tex <- tex.fig.off(tex)\n    #\n    # fig off\n  }\n  \n  # -----------------------------------------------\n  # Profiles section - all chromosomes\n  #  \n  \n  if (! is.null(segment$rcaf.segs)) {\n    \n    lx.out(\"reporting profiles RCAF - all chromosomes\")\n    \n    tex.tag(tex, \"newpage\")\n    tex.section(tex, \"RCAF Profiles - all chromosomes\")\n\n    # fig on\n    #\n    tex <- tex.fig.on(tex, width=7, height=7, family=\"Times\")\n    \n    plot(segment, what=\"rcaf\")  \n    \n    tex <- tex.fig.off(tex)\n    #\n    # fig off\n  }\n\n  if (! is.null(segment$rrc.segs)) {\n    \n    lx.out(\"reporting profiles RRC - all chromosomes\")\n    \n    tex.tag(tex, \"newpage\")\n    tex.section(tex, \"RRC Profiles - all chromosomes\")\n    \n    # fig on\n    #\n    tex <- tex.fig.on(tex, width=7, height=7, family=\"Times\")\n    \n    plot(segment, what=\"rrc\")  \n    \n    tex <- tex.fig.off(tex)\n    #\n    # fig off\n  }\n  \n  # -----------------------------------------------\n  # Profiles section - by chromosomes\n  #\n  \n  if (! is.null(segment$rcaf.segs)) {\n    \n    lx.out(\"reporting profiles RCAF - by chromosome\")\n    \n    tex.tag(tex, \"newpage\")\n    tex.section(tex, \"RCAF Profiles - by chromosomes\")\n\n    chrs <- as.character(unique(segment$rcaf.segs$chr))\n    \n    lapply(chrs, function(chr) {\n      \n      lx.out(\"  chr: \", chr)\n      \n      # fig on\n      #\n      tex <- tex.fig.on(tex, width=7, height=4, family=\"Times\")\n      \n      plot(segment, what=\"rcaf\", chrs=chr, main=paste0(\"chr\", chr))\n      \n      tex <- tex.fig.off(tex)\n      #\n      # fig off\n    })\n  }\n  \n  if (! is.null(segment$rrc.segs)) {\n    \n    lx.out(\"reporting profiles RRC - by chromosome\")\n    \n    tex.tag(tex, \"newpage\")\n    tex.section(tex, \"RRC Profiles - by chromosomes\")\n    \n    chrs <- as.character(unique(segment$rrc.segs$chr))\n    \n    lapply(chrs, function(chr) {\n      \n      lx.out(\"  chr: \", chr)\n      \n      # fig on\n      #\n      tex <- tex.fig.on(tex, width=7, height=4, family=\"Times\")\n      \n      plot(segment, what=\"rrc\", chrs=chr, main=paste0(\"chr\", chr))\n      \n      tex <- tex.fig.off(tex)\n      #\n      # fig off\n    })\n  }\n  \n  # -----------------------------------------------\n  # end\n  \n  lx.out(\"end of report\", with.mem=T)\n\n  invisible(tex)\n}\n",
    "created" : 1509532975634.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1657997740",
    "id" : "FD702D00",
    "lastKnownWriteTime" : 1509539544,
    "last_content_update" : 1509539544376,
    "path" : "~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/asdog/R/asdog.segment.report.r",
    "project_path" : "R/asdog.segment.report.r",
    "properties" : {
    },
    "relative_order" : 12,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
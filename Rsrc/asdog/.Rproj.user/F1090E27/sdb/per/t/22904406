{
    "collab_server" : "",
    "contents" : "# -------------------------------------------------\n# $Id: $\n# Asdog: Copy Number Analysis for WGS data\n#\n# Segment plotting\n#\n\n# -------------------------------------------------\n# local segments\n# draw segments with lend=1 ensuring everything is visible\n# small segments are represented with points\n#\n.segments <- function(x0, y0, x1=x0, y1=y0, lend=1, pch=15, cex=0.2, \n                      res=1000, tol=1, ...) {\n  segments(x0, y0, x1, y1, lend=lend, ...)\n  if (lend == 1) {\n    # select small segments only\n    sel <- lx.scale(x1-x0, c(1,res), par(\"usr\")[1:2], zerob=T) < tol\n    if (any(sel))\n      points(x0[sel], (y0[sel]+y1[sel])/2, pch=pch, cex=cex, ...)\n  }\n  invisible()\n}\n\n# -------------------------------------------------\n# local plot : cn or af profile\n#\n.plot.profile <- function(x, y, fun=plot, chrs=NULL, decimate=TRUE,\n                          ylim=NULL,\n                          alpha=ifelse(decimate, 1, 0.8),\n                          cex=ifelse(decimate, 0.1, 0.05),\n                          pch=16,\n                          xlab=\"position\", ylab=\"Y\", \n                          .samp=5e4, ...) {\n  \n  if (missing(y)) {\n    y <- x\n    x <- seq_along(y)\n  }\n\n  if (is.null(ylim)) {\n    ylim <- quantile(y, c(0.01, 0.99), na.rm=T)\n  }\n  \n  below <- y<=ylim[1]\n  above <- y>=ylim[2]\n  y[below] <- ylim[1]\n  y[above] <- ylim[2]\n  \n  pal <- lx.color.alpha(c(6, 1), alpha)\n  col <- pal[ifelse(above|below, 1, 2)]\n\n  if (decimate) {\n    lx.plot(x, y, fun=fun, ylim=ylim, cex=cex, pch=pch,\n            xlab=xlab, ylab=ylab, xaxs='i',\n            col=col, .samp=.samp, ...)\n  } else {\n    fun(x, y, ylim=ylim, cex=cex, pch=pch,\n        xlab=xlab, ylab=ylab, xaxs='i',\n        col=col, ...)\n  }\n\n  if (! is.null(chrs)) {\n    rle <- rle(chrs)\n    gx <- x[cumsum(rle$lengths)]\n    abline(v=gx, col=4)\n    text(gx, ylim[2], labels=rle$values, cex=0.5, pos=2, off=0.1, col=4)\n  }\n  \n  invisible()\n}\n\n# -------------------------------------------------\n# zscor colors\n#\n.zscor.colors <- function(zscor, n=10, alpha=0.5) {\n  asdog.gradient.colors(abs(zscor), xrange=c(0, n),\n                        nlevels=n+1, alpha=alpha, rev=T) \n}\n\n# -------------------------------------------------\n# plot profiles rcaf\n#\n.plot.profile.rcaf <- function(segment, chrs=names(segment$rcaf.data),\n                               ylim=NULL, main=NULL,\n                               decimate=length(chrs)>1, ...) {\n  \n  chrs <- as.character(chrs)\n  single <- length(chrs) <= 1\n  \n  pltheo <- segment$rcaf.theo\n  hmm  <- segment$rcaf.hmm\n\n  rcaf <- segment$rcaf.data[chrs]\n  rcaf <- do.call(rbind, rcaf)\n  \n  if (single) {\n    pos <- rcaf$pos\n  } else {\n    clocs <- clocations(cbind(rcaf$chr, rcaf$pos, rcaf$pos))\n    pos <- clocs2coords(segment, clocs)[,1]\n  }\n  \n  segs <- segment$rcaf.segs[as.character(segment$rcaf.segs$chr) %in% chrs,]\n  \n  if (single) {\n    segs$cfrom <- segs$from\n    segs$cto <- segs$to\n  } else {\n    clocs <- clocations(cbind(segs$chr, segs$from, segs$to))\n    coords <- clocs2coords(segment, clocs)\n    segs$cfrom <- coords[,1]\n    segs$cto <- coords[,2]\n  }\n  \n  if (is.null(ylim)) {\n    cnmax <- segment$params$segment.plot.cnmax\n    if (cnmax == 0) {\n      rcmax <- segment$params$segment.plot.rcmax\n    } else {\n      rcmax <- asdog.relRC(segment$params$segment.plot.cnmax,\n                           pltheo$alpha, pltheo$q0)\n    }\n    if (rcmax == 0) rcmax <- max(rcaf$rrc) # @fixme: [AV] use quantile instead\n    ylim <- c(0, rcmax)\n  }\n  \n  opar <- par(no.readonly=T)\n  par(mfrow=c(2, 1),\n      mgp=c(2,1,0),\n      mar=c(0, 4, 0, 2) + 0.1,\n      oma=c(4, 0, 2, 0) + 0.1)\n  \n  # ---------------------------------\n  # RRC plot\n  # ---------------------------------\n  \n  # empty plot to setup scale\n  #\n  .plot.profile(pos, rcaf$rrc, chrs=NULL, decimate=decimate,\n                ylim=ylim, ylab=\"rrc\", alpha=0, xaxt='n', ...)\n  \n  # color bands -> zscore\n  #\n  segments(segs$cfrom, 0, segs$cto, 0,\n           col=.zscor.colors(segs$zscor.rrc),\n           lwd=5000, lend=1)\n  \n  # replot points over bands\n  #\n  .plot.profile(pos, rcaf$rrc, fun=points, chrs=rcaf$chr,\n                decimate=decimate, ylim=ylim, xaxt='n', ...)\n\n  # CN scale\n  #\n  abline(h=unique(Re(thmm.parameters(hmm, \"mean\"))), lty=2, lwd=0.5, col=lx.GREY)\n  axis(4, unique(pltheo$rc), unique(pltheo$ploidy), las=2, cex.axis=0.5)\n  \n  # reference CN line\n  #\n  ref.rc <- asdog.relRC(segment$rcaf.refcn, pltheo$alpha, pltheo$q0)\n  abline(h=ref.rc, lty=2, lwd=0.5, col=lx.BLUE)\n  points(par(\"usr\")[2], ref.rc, pch=23, cex=1, col=lx.BLUE, bg=lx.BLUE, xpd=NA)\n  \n  # plot segments\n  #   yellow -> observed\n  #   red    -> model \n  #\n  .segments(segs$cfrom, segs$med.rrc, segs$cto, segs$med.rrc,\n            col=lx.color.alpha(7, 0.5), lwd=5, lend=1)\n  .segments(segs$cfrom, segs$lev.rrc, segs$cto, segs$lev.rrc,\n            col=2, lwd=2, lend=1)\n  \n  # title\n  #\n  if (! is.null(main)) {\n    title(main, line=0.5, xpd=NA)\n  }\n\n  # ---------------------------------\n  # BAF plot\n  # ---------------------------------\n  \n  # empty plot to setup scale\n  #\n  .plot.profile(pos, rcaf$baf, chrs=NULL, decimate=decimate,\n                ylim=c(0,1), ylab=\"af\", alpha=0, ...)\n  \n  # color bands -> zscore\n  #\n  segments(segs$cfrom, 0.5, segs$cto, 0.5,\n           col=.zscor.colors(segs$zscor.baf),\n           lwd=5000, lend=1)\n  \n  # replot points over bands\n  #\n  .plot.profile(pos, rcaf$baf, fun=points, chrs=rcaf$chr,\n                decimate=decimate, ylim=c(0,1), ...)\n  abline(h=0.5, col=lx.BLUE, lty=2, lwd=0.5)\n  \n  # plot segments\n  #   yellow -> observed\n  #   red    -> model \n  #\n  .segments(segs$cfrom, segs$med.baf, segs$cto, segs$med.baf,\n            col=lx.color.alpha(7, 0.5), lwd=5, lend=1)\n  .segments(segs$cfrom, 1-segs$med.baf, segs$cto, 1-segs$med.baf,\n            col=lx.color.alpha(7, 0.5), lwd=5, lend=1)\n  .segments(segs$cfrom, segs$lev.baf, segs$cto, segs$lev.baf,\n            col=2, lwd=2, lend=1)\n  .segments(segs$cfrom, 1-segs$lev.baf, segs$cto, 1-segs$lev.baf,\n            col=2, lwd=2, lend=1)\n  \n  par(opar)\n  invisible()  \n}\n\n# -------------------------------------------------\n# plot profile  rrc\n#\n.plot.profile.rrc <- function(segment, chrs=names(segment$rrc.data),\n                              ylim=NULL, main=NULL,\n                              decimate=length(chrs)>1, ...) {\n  chrs <- as.character(chrs)\n  single <- length(chrs) <= 1\n  \n  pltheo <- segment$rrc.theo\n  hmm  <- segment$rrc.hmm\n  \n  rrc <- segment$rrc.data[chrs]\n  rrc <- do.call(rbind, rrc)\n  \n  if (single) {\n    pos <- rrc$pos\n  } else {\n    clocs <- clocations(cbind(rrc$chr, rrc$pos, rrc$pos))\n    pos <- clocs2coords(segment, clocs)[,1]\n  }\n  \n  segs <- segment$rrc.segs[as.character(segment$rrc.segs$chr) %in% chrs,]\n  \n  if (single) {\n    segs$cfrom <- segs$from\n    segs$cto <- segs$to\n  } else {\n    clocs <- clocations(cbind(segs$chr, segs$from, segs$to))\n    coords <- clocs2coords(segment, clocs)\n    segs$cfrom <- coords[,1]\n    segs$cto <- coords[,2]\n  }\n  \n  if (is.null(ylim)) {\n    cnmax <- segment$params$segment.plot.cnmax\n    if (cnmax == 0) {\n      rcmax <- segment$params$segment.plot.rcmax\n    } else {\n      rcmax <- asdog.relRC(segment$params$segment.plot.cnmax,\n                           pltheo$alpha, pltheo$q0)\n    }\n    if (rcmax == 0) rcmax <- max(rrc$rrc) # @fixme: [AV] use quantile instead\n    ylim <- c(0, rcmax)\n  }\n  \n  # empty plot to setup scale\n  #\n  .plot.profile(pos, rrc$rrc, chrs=NULL, decimate=decimate,\n                ylim=ylim, ylab=\"rrc\", alpha=0, ...)\n  \n  # color bands -> zscore\n  #\n  segments(segs$cfrom, 0, segs$cto, 0,\n           col=.zscor.colors(segs$zscor.rrc),\n           lwd=5000, lend=1)\n  \n  # replot points over bands\n  #\n  .plot.profile(pos, rrc$rrc, fun=points, chrs=as.character(rrc$chr), \n                decimate=decimate, ylim=ylim, ...)\n\n  # CN scale\n  #\n  abline(h=thmm.parameters(hmm, \"mean\"), lty=2, lwd=0.5, col=lx.GREY)\n  axis(4, unique(pltheo$rc), unique(pltheo$ploidy), las=2, cex.axis=0.5)\n\n  # reference CN line\n  #\n  ref.rc <- asdog.relRC(segment$rrc.refcn, pltheo$alpha, pltheo$q0)\n  abline(h=ref.rc, lty=2, lwd=0.5, col=lx.BLUE)\n  points(par(\"usr\")[2], ref.rc, pch=23, cex=1, col=lx.BLUE, bg=lx.BLUE, xpd=NA)\n  \n  # plot segments\n  #   yellow -> observed\n  #   red    -> model \n  #\n  .segments(segs$cfrom, segs$med.rrc, segs$cto, segs$med.rrc,\n           col=lx.color.alpha(7, 0.5), lwd=5, lend=1)\n  .segments(segs$cfrom, segs$lev.rrc, segs$cto, segs$lev.rrc,\n            col=2, lwd=2, lend=1)\n\n  # title\n  #\n  if (! is.null(main)) {\n    title(main, xpd=NA)\n  }\n  \n  invisible()\n}\n\n# -------------------------------------------------\n# S3 method to plot Segment\n#\nplot.Segment <- function(segment, chrs=names(segment$rrc.data), \n                           what=c(\"rcaf\", \"rrc\"), decimate=length(chrs)>1, \n                         ...) {\n  \n  what <- match.arg(what)\n  \n  fun <- get(paste0(\".plot.profile.\", what), mode=\"function\")\n  \n  fun(segment, chrs=chrs, decimate=decimate, ...)\n}\n\n",
    "created" : 1503596755068.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2949056112",
    "id" : "22904406",
    "lastKnownWriteTime" : 1502924996,
    "last_content_update" : 1502924996,
    "path" : "~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/asdog/R/asdog.segment.plot.r",
    "project_path" : "R/asdog.segment.plot.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
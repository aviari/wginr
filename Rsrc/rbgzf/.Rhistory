mb(foo(fh), foo(ffh))
mb(foo(fh), foo(ffh))
mb(foo(fh), foo(ffh))
foo
foo <- function(fh) {
n <- sum(sapply(fh$header$seq, function(x) x$size))
set.seed(0)
p <- sample(n, N, replace=T)
x <- sapply(p, function(p) basta.fetch.coord(fh, c(p, p+100)))
}
mb(foo(fh), foo(ffh))
foo <- function(fh) {
n <- sum(sapply(fh$header$seq, function(x) x$size))
set.seed(0)
p <- sample(n, N, replace=T)
x <- sapply(p, function(p) basta.fetch.coord(fh, c(p, p+100)))
}
mb(foo(fh), foo(ffh))
foo <- function(fh) {
n <- sum(sapply(fh$header$seq, function(x) x$size))
set.seed(10)
p <- sample(n, N, replace=T)
x <- sapply(p, function(p) basta.fetch.coord(fh, c(p, p+100)))
}
mb(foo(fh), foo(ffh))
mb(foo(fh), foo(ffh))
foo <- function(fh) {
n <- sum(sapply(fh$header$seq, function(x) x$size))
# set.seed(10)
p <- sample(n, N, replace=T)
x <- sapply(p, function(p) basta.fetch.coord(fh, c(p, p+100)))
}
mb(foo(fh), foo(ffh))
fh <- basta.open(f)
ffh <- basta.open(ff)
basta.close(fh)
basta.close(ffh)
fh <- basta.open(f, check.crc32=T)
ffh <- basta.open(ff, check.crc32=T)
basta.close(fh)
basta.close(ffh)
st=system.time
st(fh <- basta.open(f, check.crc32=T)
)
st(ffh <- basta.open(ff, check.crc32=T))
system("ls -ltrh /Users/viari/Desktop/LyonCancer/data/HS_GRCh37_72.bst")
system("ls -ltrh /Users/viari/Desktop/LyonCancer/data/HS_GRCh37_72.bst.bgz")
2700/732
source('~/Desktop/util.graph.r')
require(microbenchmark)
mb = microbenchmark
source('~/Desktop/util.graph.r')
g <- erdos.digraph(1000, 2000)
mean(sapply(connected.components(g), length))
mb(foo())
foo <- function() {
g <- erdos.digraph(1000, 2000)
mean(sapply(connected.components(g), length))
}
mb(foo())
mb(foo(), times=10)
source('~/Desktop/util.graph.r')
mb(foo(), times=10)
st=system.time
foo()
st(a<-foo())
source('~/Desktop/util.graph.r')
gg <- erdos.digraph(1000, 2000)
bar <- function(g) {
length(connected.components(g))
}
bar(gg)
mb(bar(gg), times=10)
mb(bar(gg), times=10)
source('~/Desktop/util.graph.r')
mb(bar(gg), times=10)
mb(bar(gg), times=10)
source('~/Desktop/util.graph.r')
mb(bar(gg), times=10)
mb(bar(gg), times=10)
gg <- erdos.digraph(1000, 2000)
require(lx)
?lx.sample
source('~/Desktop/util.graph.r')
g <- UnGraph()
addNode(g, "one")
addNode(g, "two")
addNode(g, "three")
addEdge(g, "one", "two")
addEdge(g, "two", "three")
print(g)
plot(g)
nodes(g)
g
edges(g)
connected.components(g)
size(g)
g <- erdos.digraph(1000, 2000)
mean(sapply(connected.components(g), length))
source('~/Desktop/util.graph.r')
g <- UnGraph()
addNode(g, "one")
addNode(g, "two")
addNode(g, "three")
addEdge(g, "one", "two")
addEdge(g, "two", "three")
size(g)
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- erdos.digraph(1000, 2000)
mean(sapply(connected.components(g), length))
g <- erdos.digraph(1000, 2000, constructor=UnGraph)
mean(sapply(connected.components(g), length))
source('~/Desktop/util.graph.r')
g <- UnGraph()
addNode(g, "one")
addNode(g, "two")
addNode(g, "three")
addEdge(g, "one", "two")
addEdge(g, "two", "three")
size(g)
connected.components(g)
removeNode(g, "two")
size(g)
addEdge(g, "one", "one")
size(g)
nodes(g)
edges(g)
addEdge(g, "one", "two")
addNode(g, "two")
addEdge(g, "one", "two")
edges(g)
sample(10, 1)
sample(10, -1)
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- erdos.graph(1000, 2000, constructor=UnGraph)
mean(sapply(connected.components(g), length))
g <- erdos.graph(1000, 2000, constructor=UnGraph)
mean(sapply(connected.components(g), length))
g <- erdos.graph(1000, 2000, constructor=UnGraph)
mean(sapply(connected.components(g), length))
g <- erdos.graph(1000, 1000, constructor=UnGraph)
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- DiGraph()
addNode(g, "one")
addNode(g, "two")
addNode(g, "three")
addNode(g, "four")
addEdge(g, "one", "two")
addEdge(g, "two", "three")
addEdge(g, "one", "one")
size(g)
outNodes(g, "one")
inNodes(g, "one")
removeNode(g, "two")
size(g)
outNodes(g, "one")
nodes(g)
edges(g)
g <- DiGraph()
addNode(g, "one")
addNode(g, "two")
addNode(g, "three")
addNode(g, "four")
addEdge(g, "one", "two")
addEdge(g, "two", "three")
addEdge(g, "one", "one")
size(g)
outNodes(g, "one")
inNodes(g, "one")
removeNode(g, "two")
size(g)
outNodes(g, "one")
nodes(g)
edges(g)
connected.components(g)
g <- UnGraph()
addNode(g, "one")
addNode(g, "two")
addNode(g, "three")
addEdge(g, "one", "two")
addEdge(g, "two", "three")
size(g)
connected.components(g)
removeNode(g, "two")
size(g)
addEdge(g, "one", "one")
size(g)
nodes(g)
edges(g)
g <- erdos.graph(1000, 2000, constructor=UnGraph)
mean(sapply(connected.components(g), length))
require(microbenchmark)
mb <- microbenchmark
source('~/Desktop/util.graph.r')
require(microbenchmark)
mb <- microbenchmark
mb(erdos.graph(1000, 1000, constructor=UnGraph, verbose=F))
mb(erdos.graph(1000, 1000, constructor=UnGraph, verbose=F), times=10)
mb(erdos.graph(1000, 1000, constructor=UnGraph, verbose=F), times=10)
source('~/Desktop/util.graph.r')
mb(erdos.graph(1000, 1000, constructor=UnGraph, verbose=F), times=10)
mb(erdos.graph(1000, 1000, constructor=UnGraph, verbose=F), times=10)
source('~/Desktop/util.graph.r')
mb(erdos.graph(1000, 1000, constructor=UnGraph, verbose=F), times=10)
mb(erdos.graph(1000, 1000, constructor=UnGraph, verbose=F), times=10)
mb(erdos.graph(1000, 1000, constructor=UnGraph, verbose=F), times=10)
source('~/Desktop/util.graph.r')
mb(erdos.graph(1000, 1000, constructor=UnGraph, verbose=F), times=10)
mb(erdos.graph(1000, 1000, constructor=UnGraph, verbose=F), times=10)
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g
lx.args
require(lx)
lx.args
foo<-function(a=1){lx.args()}
foo()
a=foo()
a()
a
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- UnGraph()
addNode(g, "one")
addNode(g, "two")
addNode(g, "three")
addEdge(g, "one", "two")
addEdge(g, "two", "three")
getNodes(g)
setNodes(g, val=1)
setNodes(g, nval=2)
setNodes(g, values=c(1,2))
setNodes(g, values=list(1,2))
setNodes(g, values=1:3)
nodes(g)
setNodes
setNodes.graph
nodes.graph
?onjects
?ojects
?objects
source('~/Desktop/util.graph.r')
getNodes
setNodes
setNodes.graph
source('~/Desktop/util.graph.r')
setEdges
getEdges(g)
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
addEgde(g, "one", "three")
addEdge(g, "one", "three")
getEdges(g, "one.three")
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
edges(g)
source('~/Desktop/util.graph.r')
nodes(g)
gg=subgraph(g, c("one", "three"))
source('~/Desktop/util.graph.r')
gg=subgraph(g, c("one", "three"))
gg
nodes(gg)
edges(gg)
gg=subgraph(g, c("one", "three", "one"))
source('~/Desktop/util.graph.r')
gg=subgraph(g, c("one", "three", "one"))
gg
getNodes(g)
getNodes(gg)
connected.components(g)
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- erdos.graph(1000, 1000, construct=UnGraph)
cc <- connected.components(g)
gg <- lapply(cc, function(nids) subgraph(g, nids))
cc
cc[1]
subgraph(g, cc[[1]])
subgraph(g, cc[1])
length(cc)
lapply(cc, length)
subgraph(g, "1")
g <- UnGraph()
edges(g)
nodes(g)
g$nodes
g$nodes$keys()
g$edges
g$edges$keys()
a=g$edges$keys()
is.null(a)
sapply(a, length)
get
get("toto")
objects
?objects
ls()
nodes(g)
a=nodes(g)
length(a)
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
nodes(g)
g$nodes$keys()
g$nodes
g <- UnGraph()
nodes(g)
source('~/Desktop/util.graph.r')
g <- UnGraph()
nodes(g)
oo
length(oo)
o=oo
ifelse(length(o)!=0, o, NULL)
ifelse(length(o)==0, o, NULL)
length(o)==0
?ifelse
o
length(o)!=0
ifelse(length(o)!=0, o, NULL)
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- UnGraph()
nodes(g)
g <- DiGraph()
addNode(g, "one")
addNode(g, "two")
addNode(g, "three")
addNode(g, "four")
addEdge(g, "one", "two")
addEdge(g, "two", "three")
addEdge(g, "one", "one")
size(g)
outNodes(g, "one")
inNodes(g, "one")
removeNode(g, "two")
size(g)
outNodes(g, "one")
nodes(g)
edges(g)
g <- DiGraph()
addNode(g, "one")
g
g <- DiGraph()
g
source('~/Desktop/util.graph.r')
g <- DiGraph()
g
source('~/Desktop/util.graph.r')
g <- DiGraph()
g
DiGraph()
a=DiGraph()
a
DiGraph
DiGraph()
g <- Graph()
g
source('~/Desktop/util.graph.r')
g <- DiGraph()
addNode(g, "one")
addNode(g, "two")
addNode(g, "three")
addNode(g, "four")
addEdge(g, "one", "two")
addEdge(g, "two", "three")
addEdge(g, "one", "one")
size(g)
outNodes(g, "one")
inNodes(g, "one")
removeNode(g, "two")
size(g)
outNodes(g, "one")
nodes(g)
edges(g)
g <- UnGraph()
addNode(g, "one")
addNode(g, "two")
addNode(g, "three")
addEdge(g, "one", "two")
addEdge(g, "two", "three")
size(g)
connected.components(g)
removeNode(g, "two")
size(g)
addEdge(g, "one", "one")
size(g)
nodes(g)
edges(g)
g <- erdos.graph(1000, 2000, construct=UnGraph)
mean(sapply(connected.components(g), length))
g <- erdos.graph(1000, 1000, construct=UnGraph)
cc <- connected.components(g)
gg <- lapply(cc, function(nids) subgraph(g, nids))
length(gg)
gg[1]
nc <- sapply(cc, length)
nc
max(nc)
table(sapply(cc, length))
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- UnGraph()
addNode(g, "one")
addNode(g, "two")
nids=nodes(g)
nids
nids[[1]]
head(NULL, 1)
getNode(g, "one")
getNode(g, NULL)
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- erdos.graph(1000, 1000, construct=UnGraph)
cc <- connected.components(g)
table(sapply(cc, length))
gg <- lapply(cc, function(nids) subgraph(g, nids))
cyc <- lapply(gg, has.cycle)
has.cycle(gg[[1]])
gg[[1]]
a=gg[[1]]
nodes(a)
has.cycle(gg[[2]])
a=gg[[2]]
a
nodes(a)
edges(a)
grf=gg[[2]]
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- erdos.graph(1000, 1000, construct=UnGraph)
cc <- connected.components(g)
table(sapply(cc, length))
gg <- lapply(cc, function(nids) subgraph(g, nids))
has.cycle(gg[[2]])
cyc <- lapply(gg, has.cycle)
cyc
any(cyc)
any(unlist(cyc))
cyc <- sapply(gg, has.cycle)
cyc
sum(cyc)
sum(cyc)/length(cyc)
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- UnGraph()
addNode(g, "one")
source('~/Desktop/util.graph.r')
g
nodes(g)
getNode(g, "one")
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
g <- erdos.graph(1000, 1000, construct=UnGraph)
cc <- connected.components(g)
gg <- lapply(cc, function(nids) subgraph(g, nids))
cyc <- sapply(gg, has.cycle)
sum(cyc)
cyc
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
source('~/Desktop/util.graph.r')
library(rbgzf)
library(rbgzf)
?rbgzf
library(rbgzf)
?rbgzf
library(rbgzf)
?rbgzf
library(rbgzf)
?rbgzf
?rbgzf
library(rbgzf)
library(rbgzf)
library(rbgzf)

c1 <- clocations(c(1,1,10, 1,20,30, 2,10,20))
c2  <- clocations(c(1,1,20, 1,25,30))
clocs.nearest(c1, c2)
a=clocs.nearest(c1, c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
a=clocs.nearest(c1, c2)
a
a$distance_to_nearest
a$which_nearest
c1
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
a=clocs.nearest(c1, c2)
a
c1
c2
c1 <- clocations(c(1,5,10, 1,10,15, 1,10,20, 1,20,30, 1,35,50, 2,1,10))
c2 <- clocations(c(1,1,20, 1,30,40))
clocs.nearest(c1,c2)
c1 <- clocations(c(1,5,15, 1,20,30, 1,25,35, 1,60,70, 1,1,100, 2,1,10))
c2 <- clocations(c(1,1,20, 1,40,50))
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
c1 <- clocations(c(1,5,15, 1,20,30, 1,25,35, 1,60,70, 1,1,100, 2,1,10))
c2 <- clocations(c(1,1,20, 1,40,50))
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
c1 <- clocations(c(1,5,15, 1,20,30, 1,25,35, 1,60,70, 1,1,100, 2,1,10))
c2 <- clocations(c(1,1,20, 1,40,50))
clocs.nearest(c1,c2)
clocs.nearest(c1,NULL)
clocs.nearest(NULL, NULL)
clocs.nearest(clocations(NULL), NULL)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
c1 <- clocations(c(1,5,15, 1,15,40, 1,20,30, 1,25,35, 1,60,70, 1,1,100, 2,1,10))
c2 <- clocations(c(1,1,20, 1,40,50))
clocs.nearest(c1,c2)
c1 <- clocations(c(1,5,15, 1,15,40, 1,20,30, 1,25,35, 1,60,70, 2,1,10))
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
library(xlx)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
library(xlx)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
library(xlx)
library(xlx)
library(xlx)
library(xlx)
library(xlx)
library(xlx)
fh <- basta.open(lx.system.file('samples/test.bst', 'xlx'))
require(xlx)
fh <- basta.open(lx.system.file('samples/test.bst', 'xlx'))
handle=fh
a=handle$header$sizes
a
sapply(handle$header$seq, function(x) x$size)
fh$header$offsets
fh$header$seq[[1]]$offset
fh$header$seq[[1]]$size
require(microbenchmark)
mb=microbenchmark
seq=fh$header$seq[[1]]
x=1:1000
mb(pmin(seq$size, x), pmin(siz, x))
siz=seq$size
mb(pmin(seq$size, x), pmin(siz, x))
mb(pmin(seq$size, x), pmin(siz, x))
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
library(xlx)
fh <- basta.open(lx.system.file('samples/test.bst', 'xlx'))
x <- sample(1:50, 10, replace=TRUE)
coo <- cbind(x, x)
clocs <- coords2clocs(fh, coo)
fh$header$seq[1]
fh$header$seq[1]$offset
fh$header$seq[[1]]$offset
fh$header$seq[[1:2]]
fh$header$seq[[1]]
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
library(xlx)
fh <- basta.open(lx.system.file('samples/test.bst', 'xlx'))
clocs <- coords2clocs(fh, coo)
plocs <- coords2clocs(fh, x)
identical(clocs, plocs)
x <- sample(25:30, 10, replace=TRUE)
coo <- cbind(from=x, to=x+10)
clocs <- coords2clocs(fh, coo)
rcoo <-clocs2coords(fh, clocs)
identical(coo, rcoo)
clocs <- coords2clocs(fh, matrix(0, ncol=2, nrow=0))
clocs <- coords2clocs(fh, matrix(1, ncol=2, nrow=1))
basta.close(fh)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
library(xlx)
install.packages("KFAS")
library(xlx)
formals(mean)
library(xlx)
?baf.fetch.coord
?baf.bin.coord
library(xlx)
?baf.bin.coord
formal(median)
formals(median)
formals(median)[[1]]
formals(median)[1]
names(formals(median)[1])
foo <- function(a)
a
names(formals(foo)[1])
foo <- function() 1
names(formals(foo)[1])
if (NULL == "toto") lx.out("oui")Ã 
if (NULL == "toto") lx.out("oui")
library(xlx)
?baf.bin.cloc
library(xlx)
baf <- baf.open(lx.system.file("samples/test.baf", "xlx"))
x <- regions.bycover.band(baf, binsize=1000, smooth.k=3)
x <- regions.bycover.band(baf, binsize=1000, smooth.k=0, model="twin - 4 * poisson")
y <- attr(x, "binsize")
y
baf.close(baf)
library(xlx)
baf <- baf.open(lx.system.file("samples/test.baf", "xlx"))
x <- regions.bycover.band(baf, binsize=1000, smooth.k=3)
x
x <- regions.bycover.band(baf, binsize=1000, smooth.k=0, model="twin - 4 * poisson")
x
library(xlx)
baf <- baf.open(lx.system.file("samples/test.baf", "xlx"))
i <- baf.name2index(baf, "machaon")
baf.fetch.cloc(baf, c(i, 560, 565))
baf.bin.coord(baf, c(33725, 33730), 3) # sum
baf.bin.cloc(baf, c(i, 560, 565), 3, fun=mean)
baf.bin.cloc(baf, c(i, 560, 565), 3, fun=median)
baf.bin.cloc(baf, c(i, 560, 565), 3, what="gc")
baf.bin.cloc(baf, c(i, 560, 565), 3, what="gc", na.gc=TRUE)
handle=baf
coord <- cloc2coord(handl
)
clocation=c(i, 560, 565)
coord <- cloc2coord(handle, clocation)
baf.bin.cloc(baf, c(i, 560, 565), 3, what="gc", na.gc=TRUE, na.rm=TRUE)
binsize=3
baf.bin.coord(handle, coord, binsize, what="gc", na.gc=TRUE)
.quick <- FALSE
fun=sum
formals(fun)
formals(sum)
formals(median)
?sum
identical(NULL, "count")
?identical
x="count"
identical(x, "count")
str("abc")
library(xlx)
baf <- baf.open(lx.system.file("samples/test.baf", "xlx"))
baf.bin.coord(baf, c(33725, 33730), 3, what="gc")
baf.bin.coord(baf, c(33725, 33730), 3, what="gc")
baf.bin.coord(baf, c(33725, 33730), 3, what="gc", na.gc=TRUE)
baf.bin.coord(baf, c(33725, 33730), 3, what="gc", na.gc=TRUE, na.rm=TRUE)
baf.bin.coord(baf, c(33725, 33730), 4, drop=FALSE)
baf.bin.coord(baf, c(33725, 33730), 4)
baf.bin.coord(baf, c(33725, 33730), 3, what="gc", na.gc=TRUE)
baf.bin.coord(baf, c(33725, 33730), 3, what="gc", na.gc=TRUE, na.rm=TRUE)
require(xlx)
??run
?clocations
library(xlx)
?xlx
bed <- bed.read(lx.system.file("samples/test.bed", "xlx"))
bed
?read.delim
df <- read.table("toto.txt")
df
clocs <- clocations(df)
clocs
?xlx
M <- 1e6
N <- 1000
from <- sample(M, N, replace=T)
from
to <- from + rnorm(N, L, S)
M <- 1e6   # chr size
N <- 1000  # # intervals
L <- 100   # mean interval size
S <- 10    # standard dev
from <- sample(M, N, replace=T)
to <- from + rnorm(N, L, S)
from
to
to <- from + round(rnorm(N, L, S))
to
clocs <- clocations(cbind(rep(1, N), from, to))
clocs
res <- clocs.join(clocs, delta=1000)
dim(clocs)
dim(res)
M <- 1e8   # chr size
N <- 1000  # # intervals
L <- 100   # mean interval size
S <- 10    # standard dev
from <- sample(M, N, replace=T)
to <- from + round(rnorm(N, L, S))
clocs <- clocations(cbind(rep(1, N), from, to))
res <- clocs.join(clocs, delta=1000)
dim(clocs)
dim(res)
M <- 1e5   # chr size
N <- 1000  # # intervals
L <- 100   # mean interval size
S <- 10    # standard dev
from <- sample(M, N, replace=T)
to <- from + round(rnorm(N, L, S))
clocs <- clocations(cbind(rep(1, N), from, to))
res <- clocs.join(clocs, delta=1000)
dim(res)
# generate random intervals (on single chromosome)
# this is not very realistic ;-)
M <- 1e6   # chr size
N <- 1000  # # intervals
L <- 100   # mean interval size
S <- 10    # standard dev
from <- sample(M, N, replace=T)
to <- from + round(rnorm(N, L, S))
clocs <- clocations(cbind(rep(1, N), from, to))
res <- clocs.join(clocs, delta=1000)
dim(res)
plot(clocs)
clocations(cbind(from, to))
?clocs.join
lx.use.threads()
library(xlx)
fh <- basta.open(lx.system.file("samples/test.bst", "xlx"))
basta.name2index(fh, "seq1")
basta.name2index(fh, c("seq1", "nothere"))
basta.name2index(fh, c("seq1", "nothere"), silent=T)
library(xlx)
require(xlx)
?clocs.overlap
c1 <- clocations(c(1,1,10, 1,20,30, 2,1,10))
clocs.overlap(c1, c1)
clocations=c1
clocations <- clocs.rsplit(clocations)
clocations
lengths(clocations)
sapply(clocations, nrow)
length(clocations)
nrow(c1)
nrow(clocations[[1]])
a=sapply(clocations, nrow)
length(a)
a
a[1]
a[[1]]
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c1)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c1)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
siz  <- cumsum(0, sapply(clocations, nrow))
siz  <- cumsum(c(0, sapply(clocations, nrow)))
c(0, sapply(clocations, nrow))
clocations
clocations = c1
clocations <- clocs.rsplit(clocations)
sapply(clocations, nrow)
c(0, sapply(clocations, nrow))
siz  <- cumsum(c(0, sapply(clocations, nrow)))
siz
res <- lapply(names(clocations), function(chr) {
in1 <- .clocs2inter(clocations[[chr]])
in2 <- .clocs2inter(over[[chr]])
intervals::interval_overlap(in1, in2)
})
over=c2
over=c1
over <- clocs.rsplit(over)
res <- lapply(names(clocations), function(chr) {
in1 <- .clocs2inter(clocations[[chr]])
in2 <- .clocs2inter(over[[chr]])
intervals::interval_overlap(in1, in2)
})
res
length(res)
res*10
res[[1]]
res[[1]] + 10
res[[1]]
off  <- cumsum(c(0, sapply(clocations, nrow)))
add
plus
sum
lapply(res[[1]], sum, 100)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c1)
length(off)
tail(off, 1)
tail(off, -1)
head(off, -1)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c1)
c2 <- clocations(c(1,1,20))
clocs.overlap(c1, c2)
c2
c1
clocs.overlap(c1, c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c2)
a=clocs.overlap(c1, c2)
a[[3]]
x=a[[3]]
lapply(x, sum, 100)
integer(0)  + 100
clocations
clocations=c1
clocations <- clocs.rsplit(clocations)
clocations
off  <- lapply(clocations, nrow)
off
cumsum(off)
off  <- head(cumsum(c(0, sapply(clocations, nrow))), -1)
names(off) <- names(clocations)
off
dim(off)
class(off)
names(off)
off
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c1)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c1)
clocs.overlap(c1, c2)
is.null(integer(0))
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c2)
xres
lengh(xres)
length(xres)
?intervals::interval_overlap
xres
lapply(xres, function(x) x + 100)
lapply(xres, sum, 100)
xres + 100
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c1)
clocs.overlap(c1, c2)
class(off)
off=as.integer(off)
class(off)
c2 = clocations(c(3,1,20))
clocs.overlap(c1, c2)
clocs.overlap(c2, c1)
clocs.overlap(c1, NULL)
clocs.overlap(NULL, NULL)
head(cumsum(c(0, sapply(clocations, nrow))), -1)
c1 <- clocations(c(1,1,10, 1,20,30, 2,1,10))
c1=clocs.rsplit(c1)
head(cumsum(c(0, sapply(c1, nrow))), -1)
head(cumsum(c(0, lapply(c1, nrow))), -1)
sapply(c1, nrow)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
?intervals::which_nearest
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
c1 <- clocations(c(1,5,15, 1,15,40, 1,20,30, 1,25,35, 1,60,70, 2,1,10))
c2 <- clocations(c(1,1,20, 1,40,50))
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
xdf
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
xdf
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
c1
c2
c2 <- clocations(c(1,1,20, 2,40,50))
clocs.nearest(c1,c2)
xdf
xdf[,2] = xdf[,2]+100
xdf[,2] <- xdf[,2] + 100
xdf[,2]
xdf[,3]
xdf[,2:3]
xdf[,2:3] + 100
xdf[,2] + 100
class(xdf)
xdf$which_nearest = xdf$which_nearest + 100
xdf$which_nearest
xdf$which_nearest <- lapply(xdf$which_nearest, function(x) x + 100)
cdf
xdf
xdf
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
xdf
lapply(xdf$which_nearest, function(x) x + 100)
sapply(xdf$which_nearest, function(x) x + 100)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
a=clocs.nearest(c1,c2)
a$which_nearest = a$which_nearest + a$offset
a$which_nearest = lapply(a$which_nearest, function(x) x + a$offset)
a
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
xoff
xoff[['2']]
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
clocs.nearest(c1,NULL)
clocs.nearest(NULL, NULL)
clocs.nearest(NULL, c1)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
library(xlx)
library(xlx)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
library(xlx)
c1 <- clocations(c(1,5,15, 1,15,40, 1,20,30, 1,25,35, 1,60,70, 2,1,10))
c2 <- clocations(c(1,1,20, 1,40,50))
clocs.nearest(c1,c2)
?order
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
c1 <- clocations(c(1,1,10, 1,20,30, 2,1,10))
clocs.overlap(c1, c1)
require(lx)
clocs.overlap(c1, c1)
c2 <- clocations(c(1,1,20))
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.overlap(c1, c2)
clocs.overlap(c2, c1)
c2 <- clocations(c(1,1,15, 1,5,25))
clocs.overlap(c1, c2)
clocs.overlap(c2, c1)
clocs.overlap(c1, NULL)
clocs.overlap(NULL, NULL)
c2 <- clocations(c(1,1,15, 1,5,25))
clocs.overlap(c1, c2)
c2 <- clocations(c(1,1,15, 1,5,25, 2,1,10))
clocs.overlap(c1, c2)
c2 <- clocations(c(2,1,10, 1,1,15, 1,5,25))
clocs.overlap(c1, c2)
clocs.overlap(c2, c1)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
c1 <- clocations(c(1,5,15, 1,15,40, 1,20,30, 1,25,35, 1,60,70, 2,1,10))
c2 <- clocations(c(1,1,20, 1,40,50))
clocs.nearest(c1,c2)
c2 <- clocations(c(2,1,10, 1,1,20, 1,40,50))
clocs.nearest(c1,c2)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
xres
xres$distance_to_nearest
class(xres$which_nearest)
source('~/Developpements/SvnProjects/WGInR_Asdog/Rsrc/xlx/R/xlx.coords.r')
clocs.nearest(c1,c2)
c1
c2
library(xlx)

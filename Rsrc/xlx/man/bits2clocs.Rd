% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xlx.coords.r
\name{bits2clocs}
\alias{bits2clocs}
\title{transform bitfields into matrix of clocations}
\usage{
bits2clocs(bits, minsize = 1L, p0 = 1L, delta = 1L,
  use.threads = lx.use.threads())
}
\arguments{
\item{bits}{named list of bitfields (see note)}

\item{minsize}{minimum region size}

\item{p0}{region origin (see details)}

\item{delta}{region size factor (see details)}

\item{use.threads}{(see \link{lx.use.threads})}
}
\value{
a matrix of clocations
}
\description{
considering a \bold{list of bitfields} (each of them representing
allowed positions on a chromosome), this function
will recover runs of TRUE's (larger than the given
threshold) on each of them and return them as a nx3 matrix of clocations.
the input list should be named by the chromosome indexes.
}
\details{
names of the \code{bits} parameter are chromosome indexes
(in order to put them into clocations)\cr
\code{p0} and \code{delta} are two parameters to transform indices
of TRUE's in bitfields into actual positions on chromosomes according to:\cr
 \code{       pos = p0 + (i-1) * delta}\cr
this is useful when indices actually correspond to binned values
(delta=binsize) or to regions that do not start at 1
(p0 = from)
}
\examples{
fh <- basta.open(lx.system.file("samples/test.bst", "xlx"))
slocs <- c("seq1:1-10", "seq1:15-20", "seq2:2-3") 
clocs <- clocs.matrix(lapply(slocs, sloc2cloc, handle=fh))
bits <- clocs2bits(fh, clocs)
rclocs <- bits2clocs(bits)
identical(clocs, rclocs)
rclocs <- bits2clocs(bits, 5)
rclocs <- bits2clocs(bits, 50)
bits[[1]] <- bit::bit(length(bits[[1]]))
rclocs <- bits2clocs(bits)
bits[[2]] <- bit::bit(length(bits[[2]]))
rclocs <- bits2clocs(bits)
basta.close(fh)

}
\seealso{
\link{runs2clocs} for single bitfield version
}

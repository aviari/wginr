% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xlx.coords.r
\name{clocs2bits}
\alias{clocs2bits}
\title{transform a matrix of clocations to bitfield(s)}
\usage{
clocs2bits(handle, clocations, chrs = unique(clocations[, 1]),
  save.mem = FALSE, use.threads = lx.use.threads())
}
\arguments{
\item{handle}{basta/baf file handle (as returned by \link{basta.open}
or \link{baf.open})}

\item{clocations}{nx3 matrix of relative clocations (1-based)}

\item{chrs}{vector (possibly scalar) of chromosome indexes (not names) to work on}

\item{save.mem}{save memory at expense of speed (see details)}

\item{use.threads}{(see \link{lx.use.threads})}
}
\value{
named list (possibly of size 0) of bitfields
}
\description{
transform a matrix of clocations to bit bitfield(s) of 
allowed positions on specified chromosome(s).\cr
bitfield(s) are defined in \code{bit} library\cr
}
\details{
by default, this function internally works using logicals.
This requires N bytes of memory per chromosome, 
where N is the size of each chromosome.
The \code{save.mem} parameter will force using bitfields internally.
This results in a 30 fold reduction of memory size at expense of speed.
If memory is short, also consider using \code{use.threads = FALSE} to
proceed each chromosome sequentially.
}
\examples{
fh <- basta.open(lx.system.file("samples/test.bst", "xlx"))
slocs <- c("seq1:1-10", "seq1:15-20", "seq2:2-5") 
clocs <- clocs.matrix(lapply(slocs, sloc2cloc, handle=fh))
bits <- clocs2bits(fh, clocs)
empty <- clocs2bits(fh, clocs.matrix(NULL))
basta.close(fh)
}

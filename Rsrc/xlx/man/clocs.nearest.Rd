% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xlx.coords.r
\name{clocs.nearest}
\alias{clocs.nearest}
\title{Identify nearest member(s) in a set of clocations}
\usage{
clocs.nearest(from, to, use.threads = lx.use.threads())
}
\arguments{
\item{from}{nx3 matrix of relative clocations (1-based)}

\item{to}{mx3 matrix of relative clocations (1-based)}

\item{use.threads}{(see \link{lx.use.threads})}
}
\value{
A data frame with three columns: 
distance_to_nearest, which_nearest, and which_overlap.
the first one is NA if there are no interval at all in
the \code{to} set.\cr
The last two are lists, since there may be zero, one, 
or more nearest intervals in the \code{to} set.
}
\description{
For each clocations in the \code{from} argument,
identify the nearest clocation or clocations (in case of ties)
in the \code{to} argument.
}
\details{
the distance between two intervals is their spacing. So if they overlap
the distance is 0.\cr
}
\note{
multithreading is performed by chromosomes
}
\examples{
c1 <- clocations(c(1,5,15, 1,15,40, 1,20,30, 1,25,35, 1,60,70, 2,1,10))
c2 <- clocations(c(1,1,20, 1,40,50))
clocs.nearest(c1,c2)
c2 <- clocations(c(2,1,10, 1,1,20, 1,40,50))
clocs.nearest(c1,c2)
clocs.nearest(c1,NULL)
clocs.nearest(NULL, NULL)

}
\seealso{
\link{clocs.overlap}, \link{clocs.included}, \link{clocs.covered}
}

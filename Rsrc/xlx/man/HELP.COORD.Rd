% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xlx.coords.r
\docType{data}
\name{HELP.COORD}
\alias{HELP.COORD}
\title{Coordinate systems}
\description{
XLX tools use three coordinates system:\cr
\subsection{Relative string coordinates, called \code{sloc}}{
  a \code{sloc} is a string of the form :\cr
  \code{"chrname:from-to"} or \code{"chrname:from:to"}\cr
  where \code{chrname} is the sequence name (not the sequence index)
   \code{from} and \code{to} can be either 1-based (default)
  or 0-based (by specifiying the zero.based.loc=TRUE option)
}
\subsection{Relative coordinates, called \code{cloc}}{
   a \code{cloc} is a 1-based \code{slocation} of the form:\cr
   \code{c(chrindex, from, to)}
   where \code{chrindex} is the (1-based) index of sequence entry in basta file.\cr
   \code{chrindex}, \code{from} and \code{to} are (32 bits) integers.
}
\subsection{Absolute coordinates, called \code{coord}}{
 a \code{coord} represents two absolute positions in the catenated chromosomes,
 of the form \code{c(from, to)}.\cr
 absolute coordinates are always 1-based\cr
 \code{from} and \code{to} are (64 bits) doubles actually representing integers
 (there is no loss of precision until 53 bits i.e. 9,007,199,254,740,992)
}
It is not memory nor speed efficient to manipulate large amount
of clocations as lists (it uses about 64 bytes per clocation).\cr
Instead, XLX manipulate sets of clocations by matrices or list of matrices
(this uses 12 or 8 bytes per clocation and is much quicker to operate).
\subsection{Matrix of clocations, called \code{clocs}}{
a \code{clocs} is a nx3 matrix. each row is a clocation chrindex, from, to.
columns are named: "chr", "from", "to" respectively.
if necessary you may convert it to a dataframe by: \code{as.data.frame(clocs)}.
note that "chr" is (as in cloc) a chrindex \bold{not} a chr name.
use \code{basta.index2name} or \code{basta.name2index} to transform between
names and indexes}
\subsection{List of matrices of locations, called \code{llocs}}{
a \code{llocs} is a more memory efficient version of \code{clocs}.
this is a named list of matrices. each element of the list is named
by a chromosome index (as character) and contains an mx2 matrix
of from, to relative positions on this chromosome.
}
\subsection{Matrix of coordinates, called \code{coords}}{
a \code{coords} is a nx2 matrix. each row is a coord absfrom, absto.
columns are named: "from", "to" respectively.
if necessary you may convert it to a dataframe by: \code{as.data.frame(coords)}
}
\subsection{Summary}{
  \tabular{llll}{
  \bold{single location} \tab \tab \tab \cr
  \bold{shortname} \tab \bold{name} \tab \bold{definition} \tab \bold{base}\cr
  sloc \tab relative slocation \tab "chrname:from-to" \tab 0 or 1-based\cr
  cloc \tab relative clocation \tab c(chrindex, from, to) \tab 1-based\cr
  coord \tab absolute coordinates \tab c(absfrom, absto) \tab 1-based offset\cr\cr
  \bold{multiple locations} \tab \tab \tab \cr
  \bold{shortname} \tab \bold{name} \tab \bold{definition} \tab \bold{base}\cr
  clocs \tab matrix of clocations \tab nx3 matrix \tab 1-based\cr
  llocs \tab list of matrices of locations \tab n list of mx2 matrices \tab 1-based\cr
  coords \tab matrix of coordinates \tab nx2 matrix \tab 1-based\cr
  }
}
}
\note{
in 1-based system endpoints are included : [from, to]\cr
in 0-based system the right endpoint is excluded : [from, to[\cr
the conversion between 0-based and 1-based is therefore\cr
from0 = from1 - 1\cr
to0   = to1\cr

conversion between coordinate systems is performed by the
<xxx>2<yyy> functions (e.g. \link{coord2cloc})

when extracting rows (or cols) from matrix, don't forget
to add the \code{drop=FALSE} last subscript, in order to avoid
spurious coercing to vector when selecting a single row (or col).
(eg: \code{clocs[1,,drop=FALSE]})
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xlx.coords.r
\name{clocs.inter}
\alias{clocs.inter}
\title{compute the intersection of two sets of clocations}
\usage{
clocs.inter(clocations1, clocations2, minsize = 1L,
  use.threads = lx.use.threads())
}
\arguments{
\item{clocations1}{nx3 matrix of relative clocations (1-based)}

\item{clocations2}{mx3 matrix of relative clocations (1-based)}

\item{minsize}{minimum interval width (see details)}

\item{use.threads}{(see \link{lx.use.threads})}
}
\value{
kx3 matrix of relative clocations (1-based)
}
\description{
each set of clocations represents intervals on chromosomes.
this function intersects (by chromosome) the union of all intervals from the first set
with the union of all intervals from the second set and retains intervals
above a specified width.\cr
}
\details{
minsize parameter: all resulting intervals strictly smaller than \code{minsize} are discarded
}
\note{
the result is always compact and strongly disjoint

intersecting a set with itself is formally equivalent to calling \link{clocs.reduce}

multithreading is performed by chromosomes
}
\examples{
c1 <- clocations(c(1,1,10, 1,20,30, 2,1,10))
c2 <- clocations(c(1,5,15, 1,10,25))
clocs.inter(c1, c2)
clocs.inter(c2, c1)
identical(clocs.inter(c2,c2), clocs.reduce(c2))
clocs.inter(c1, NULL)
clocs.inter(NULL, NULL)

}
\seealso{
\link{clocs.included}, \link{clocs.covered}, \link{clocs.overlap}.
}

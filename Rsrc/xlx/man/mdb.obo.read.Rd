% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mdb.obo.r
\name{mdb.obo.read}
\alias{mdb.obo.read}
\title{read obo flat file and parse fields}
\usage{
mdb.obo.read(pathname)
}
\arguments{
\item{pathname}{pathname of obo file to read}
}
\value{
a list indexed by GO terms (under the form GO.<number> not GO:<number>)\cr
        each element is a list indexed by the record key\cr
        each recordkey element is either the raw line(s) or the result of a specific parser\cr
        current parsers are provided for : id, is_a, relationship and xref.\cr
        in addition a pseudo-key named 'parent_of' is added, representing the reverse
        of 'is_a' relationship.
}
\description{
read obo flat file and parse fields
}
\note{
you may add your own function \code{.mdb.obo.parse.<key>(rec)}
to parse other keys than (id, is_a, relationship and xref).\cr
\code{rec} is a string containing all lines of the current record 
to be parsed (with newlines as \\n) and your function may return whatever
is appropriate (usually a list).

the obo file may be provided in plain text or gzipped format. this is checked
automaticaly, there is no need to add the .gz extension.
}
\examples{

db <- mdb.obo.read(lx.system.file("samples/test_obo.dat", "xlx"))

# get entry names
names(db)

# get info about specific entry :

db$GO.0000001
db$GO.0000001$id
db$GO.0000001$name

# search for entries matching pattern :

mdb.find(db, "def", "mitochondrial", ignore.case=TRUE)

dc <- mdb.obo.read(lx.system.file("samples/test_obo_compressed.dat", "xlx"))
identical(db, dc)
}
\seealso{
\link{mdb.obo.load}
}
